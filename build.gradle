plugins {
    id 'fabric-loom' version '1.11-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

/** Optional: enable Fabric API's datagen helper */
fabricApi {
    configureDataGeneration {
        client = true
    }
}

repositories {
    maven {
        name = "Ladysnake Mods"
        url = 'https://maven.ladysnake.org/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}"
    modImplementation "org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
}

def targetJavaVersion = 21

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(targetJavaVersion)
    options.compilerArgs += [
            "-Xlint:deprecation",
            "-Xlint:unchecked"
    ]
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(Jar).configureEach {
    // Reproducible builds
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    from("LICENSE") { rename { "${it}_${project.archivesBaseName}" } }
    manifest {
        attributes(
                "Implementation-Title": project.archives_base_name,
                "Implementation-Version": project.version,
                "Implementation-Vendor": "Cataclysm",
                "Built-By": "Gradle",
                "Built-Java": System.getProperty("java.version")
        )
    }
}

tasks.named("javadoc").configure {
    options.encoding = "UTF-8"
    options.addBooleanOption('Xdoclint:none', true)
}

processResources {
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand([
                version : project.version,
                minecraft_version : project.minecraft_version,
                loader_version : project.loader_version,
                fabric_version : project.fabric_version
        ])
    }

    inputs.property "version", project.version
    inputs.property "minecraft_version", project.minecraft_version
    inputs.property "loader_version", project.loader_version
    inputs.property "fabric_version", project.fabric_version
}